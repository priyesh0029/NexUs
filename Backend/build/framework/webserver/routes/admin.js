"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const adminControllers_1 = require("../../../adapters/controllers/adminControllers");
const authServiceInterface_1 = require("../../../application/services/authServiceInterface");
const authServices_1 = require("../../services/authServices");
const adminDbRepository_1 = require("../../../application/repositories/adminDbRepository");
const adminRepository_1 = require("../../database/mongoDb/repositories/adminRepository");
const adminRouter = (router) => {
    const controllers = (0, adminControllers_1.adminAuthControllers)(authServiceInterface_1.authServiceInterface, authServices_1.authServices, adminDbRepository_1.adminDbRepository, adminRepository_1.adminRepositoryMongoDB);
    router.get('/dashboard', controllers.getAdminDashboard);
    router.get('/getUserRegPerWeeek', controllers.getUserRegPerWeeek);
    router.get('/getGenders', controllers.getGenders);
    router.get('/getUserAgeGraph', controllers.getUserAgeGraph);
    router.get('/getusersListDetails', controllers.getusersListDetails);
    router.patch('/blockUser', controllers.blocUnblockUser);
    router.get('/getReportsOfUser', controllers.getReportsOfUser);
    router.get('/getPostListDetails', controllers.getPostListDetails);
    router.patch('/managePostStatus', controllers.managePostStatus);
    router.get('/getReportsOfPost', controllers.getReportsOfPost);
    router.get('/getReportedComments', controllers.getReportedComments);
    router.patch('/manageCommnetStatus', controllers.manageCommnetStatus);
    return router;
};
exports.default = adminRouter;
