"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const postControllers_1 = require("../../../adapters/controllers/postControllers");
const postDbrepository_1 = require("../../../application/repositories/postDbrepository");
const postRepository_1 = require("../../database/mongoDb/repositories/postRepository");
const multer_1 = require("../middleware/multer");
const postRouter = (router) => {
    const controllers = (0, postControllers_1.postControllers)(postDbrepository_1.postRepositoryInterface, postRepository_1.postRepositoryMongoDb);
    router.post('/create', multer_1.uploadsMulter, controllers.createPost);
    router.get('/', controllers.getAllPost);
    router.post('/like', controllers.handleLike);
    router.post('/comment', controllers.postComment);
    router.get('/allcomments', controllers.getComments);
    router.get('/allcommentReplies', controllers.getAllCommentReplies);
    router.post('/commentlike', controllers.commentLike);
    router.post('/replycomment', controllers.replycomment);
    router.post('/replylike', controllers.replylike);
    router.get('/userposts', controllers.getUserPosts);
    router.get('/getUserSavedPost', controllers.getUserSavedPost);
    router.post('/updatepost', controllers.updatePost);
    router.patch('/deletecomment', controllers.deleteComment);
    router.patch('/deleteReply', controllers.deleteReply);
    router.patch('/deletePost', controllers.deletePost);
    router.patch('/reportPost', controllers.reportPost);
    router.patch('/reportComment', controllers.reportComment);
    router.patch('/reportReply', controllers.reportReply);
    return router;
};
exports.default = postRouter;
